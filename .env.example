# dev, test, prod
API_ENV=dev
# to generate a secret key, you can use the following command: python -c "import secrets; print(secrets.token_hex(32))"
SECRET_KEY=a-secret-key
# ---------------------------API CONFIG----------------------------
API_HOST=0.0.0.0
API_PORT=8088
APP_LOG_LEVEL=info
APP_WORKERS=4
FRONTEND_PORT=3000
FRONTEND_API_BASE_URL=http://localhost:8088
# the json key in request and response data will be converted to camelCase
IS_CAMEL_CASE=True
# ---------------------------wisenet data dir----------------------------
WISENET_DATA_DIR=./data
# ---------------------------NEO4J CONFIG----------------------------
NEO4J_URI=bolt://neo4j:7687
NEO4J_USERNAME=neo4j
#  The minimum password length is 8 characters
NEO4J_PASSWORD=wisenety
NEO4J_DIR=${WISENET_DATA_DIR}/neo4j
# ---------------------------postgres CONFIG----------------------------
POSTGRES_HOST=postgres
POSTGRES_PORT=5432
POSTGRES_DB=wisenet
POSTGRES_USER=wisenet
POSTGRES_PASSWORD=wisenet
# ---------------------------LLM CONFIG----------------------------
# https://python.langchain.com/api_reference/openai/chat_models/langchain_openai.chat_models.base.ChatOpenAI.html
OPENAI_API_KEY=
# https://python.langchain.com/api_reference/anthropic/chat_models/langchain_anthropic.chat_models.ChatAnthropic.html#langchain_anthropic.chat_models.ChatAnthropic
ANTHROPIC_API_KEY=
# https://python.langchain.com/api_reference/deepseek/chat_models/langchain_deepseek.chat_models.ChatDeepSeek.html
DEEPSEEK_API_KEY=
# https://www.volcengine.com/docs/82379/1263272
DOUBAO_API_KEY=58b0bbe2-xxxx-xxxx-xxxx-xxxxxxxx
# https://www.volcengine.com/docs/82379/1099522
DOUBAO_1_5_PRO_32K_MODEL=ep-xxxxxxxxxxxxxxxx
DOUBAO_1_5_PRO_256K_MODEL=ep-xxxxxxxxxxxxxxxx
DOUBAO_1_5_LITE_32K_MODEL=ep-xxxxxxxxxxxxxxxx
DOUBAO_PRO_32K_MODEL=ep-xxxxxxxxxxxxxxxx
DOUBAO_API_ENDPOINT=https://ark.cn-beijing.volces.com/api/v3/chat/completions
# https://help.aliyun.com/zh/dashscope/developer-reference/tongyi-thousand-questions-metering-and-billing?spm=a2c4g.11186623.help-menu-610100.d_3_5.13c846c1hUlUKW
DASHSCOPE_API_KEY='Bearer sk-xxxxxxxxxxxxxxxx'
OLLAMA_ENDPOINT=http://ollama:11434
OLLAMA_DIR=${WISENET_DATA_DIR}/ollama
DEFAULT_LLM_NAME=llama3.1
LLM_TIMEOUT=60.0
HF_ENDPOINT=https://huggingface.co
#--------------------------graph config-------------------------------
# deep limit
DEEP_LIMIT=10
# default genereate quetions count
DEFAULT_GENERATE_QUESTIONS_COUNT=3
# default genereate prompts count
DEFAULT_GENERATE_PROMPTS_COUNT=3
# UPLOAD_DIR
UPLOAD_DIR=./data/upload
# 5MB: 5 * 1024 * 1024
MAX_FILE_SIZE=5242880
# max workers for analyze graph
MAX_WORKERS=2
#--------------------------gds config-------------------------------
# The number of concurrent queries per knowledge base
GDS_CONCURRENT_QUERIES=10
# Get the number of nodes most similar to the user input
# The number of neighbors to find for each node. The K-nearest neighbors are returned. This value cannot be lower than 1.
GDS_TOP_K=10
# Similarity cutoff, Filter out from the list of K-nearest neighbors nodes with similarity below this threshold.
GDS_SIMILARITY_CUTOFF=0.5
# Get the number of nodes most similar to the user input
TOP_K=30
# Similarity cutoff
SIMILARITY_CUTOFF=0.75